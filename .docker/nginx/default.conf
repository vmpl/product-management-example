upstream fastcgi_backend {
  server fpm:9000; # Variables:  FPM_HOST FPM_PORT
}

upstream fastcgi_backend_xdebug {
  server fpm_xdebug:9000;
}

server {
    listen 80;
    listen 443 ssl;

    server_name _;

    ssl_certificate /etc/nginx/ssl/localhost+2.pem;
    ssl_certificate_key /etc/nginx/ssl/localhost+2-key.pem;

    location / {
        proxy_pass http://web:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        proxy_connect_timeout       300;
        proxy_send_timeout          300;
        proxy_read_timeout          300;
        send_timeout                300;
    }
}

server {
    listen 8080;

    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;

    server_name _;

    set $DIR_ROOT /var/www/html;
    set $MFTF_UTILS 1; # Variable: MFTF_UTILS

    set $my_fastcgi_pass "fastcgi_backend";
    if ($cookie_XDEBUG_SESSION) {
        set $my_fastcgi_pass "fastcgi_backend_xdebug";
    }

    # Support for SSL termination.
    set $my_http "http";
    set $my_ssl "off";
    set $my_port "80";
    if ($http_x_forwarded_proto = "https") {
        set $my_http "https";
        set $my_ssl "on";
        set $my_port "443";
    }

    ssl_certificate /etc/nginx/ssl/localhost+2.pem;
    ssl_certificate_key /etc/nginx/ssl/localhost+2-key.pem;

    root $DIR_ROOT/public;

    index index.php;
    autoindex off;
    charset UTF-8;
    client_max_body_size 512M; # Variable: UPLOAD_MAX_FILESIZE
    error_page 404 403 = /errors/404.php;
    #add_header "X-UA-Compatible" "IE=Edge";

    # Deny access to sensitive files
    location /.user.ini {
        deny all;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location ~ /\.(?!well-known).* {
        deny all;
    }

    # PHP entry point for main application
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_pass   $my_fastcgi_pass;
        fastcgi_buffers 1024 4k;

        fastcgi_param  PHP_FLAG  "session.auto_start=off \n suhosin.session.cryptua=off";
        fastcgi_read_timeout 300;
        fastcgi_connect_timeout 300;

        # Magento uses the HTTPS env var to detrimine if it is using SSL or not.
        fastcgi_param  HTTPS $my_ssl;

        fastcgi_index  index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include        fastcgi_params;
    }

    gzip on;
    gzip_disable "msie6";

    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/xml+rss
        image/svg+xml;
    gzip_vary on;

    # Banned locations (only reached if the earlier PHP entry point regexes don't match)
    location ~* (\.php$|\.htaccess$|\.git) {
        deny all;
    }

    location /nginx_status {
        stub_status on;
        access_log   off;
    }

    location ~ ^/(status|ping)$ {
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
        fastcgi_pass   $my_fastcgi_pass;
    }
}
